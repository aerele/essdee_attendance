{"version":3,"file":"Dashboard-BwUwO-x5.js","sources":["../../../../frontend/src/views/salary_slip/Dashboard.vue"],"sourcesContent":["<template>\n\t<BaseLayout pageTitle=\"Salary Slips\">\n\t\t<template #body>\n\t\t\t<div class=\"flex flex-col items-center my-7 p-4\">\n\t\t\t\t<div class=\"flex flex-col w-full bg-white rounded py-5 px-3.5 gap-5\">\n\t\t\t\t\t<div v-if=\"lastSalarySlip\" class=\"flex flex-col w-full gap-1.5\">\n\t\t\t\t\t\t<span class=\"text-gray-600 text-sm font-medium leading-5\">\n\t\t\t\t\t\t\tYear To Date\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span class=\"text-gray-800 text-xl font-bold leading-6\">\n\t\t\t\t\t\t\t{{\n\t\t\t\t\t\t\t\tformatCurrency(\n\t\t\t\t\t\t\t\t\tlastSalarySlip.year_to_date,\n\t\t\t\t\t\t\t\t\tlastSalarySlip.currency\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<Autocomplete\n\t\t\t\t\t\tlabel=\"Payroll Period\"\n\t\t\t\t\t\tclass=\"w-full\"\n\t\t\t\t\t\tplaceholder=\"Select Payroll Period\"\n\t\t\t\t\t\tv-model=\"selectedPeriod\"\n\t\t\t\t\t\t:options=\"payrollPeriods.data\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"flex flex-col items-center mt-5 mb-7 w-full\">\n\t\t\t\t\t<div\n\t\t\t\t\t\tv-if=\"documents.data?.length\"\n\t\t\t\t\t\tclass=\"flex flex-col bg-white rounded mt-5 overflow-auto w-full\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclass=\"p-3.5 items-center justify-between border-b cursor-pointer\"\n\t\t\t\t\t\t\tv-for=\"link in documents.data\"\n\t\t\t\t\t\t\t:key=\"link.name\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<router-link\n\t\t\t\t\t\t\t\t:to=\"{\n\t\t\t\t\t\t\t\t\tname: 'SalarySlipDetailView',\n\t\t\t\t\t\t\t\t\tparams: { id: link.name },\n\t\t\t\t\t\t\t\t}\"\n\t\t\t\t\t\t\t\tv-slot=\"{ navigate }\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<SalarySlipItem :doc=\"link\" @click=\"navigate\" />\n\t\t\t\t\t\t\t</router-link>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<EmptyState message=\"No salary slips found\" v-else />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</template>\n\t</BaseLayout>\n</template>\n\n<script setup>\nimport { inject, ref, computed, watch, onMounted, onBeforeUnmount } from \"vue\"\nimport { Autocomplete, createListResource } from \"frappe-ui\"\n\nimport BaseLayout from \"@/components/BaseLayout.vue\"\nimport EmptyState from \"@/components/EmptyState.vue\"\nimport SalarySlipItem from \"@/components/SalarySlipItem.vue\"\n\nimport { formatCurrency } from \"@/utils/formatters\"\n\nlet selectedPeriod = ref({})\nlet periodsByName = ref({})\n\nconst employee = inject(\"$employee\")\nconst dayjs = inject(\"$dayjs\")\nconst socket = inject(\"$socket\")\n\nconst payrollPeriods = createListResource({\n\tdoctype: \"Payroll Period\",\n\tfields: [\"name\", \"start_date\", \"end_date\"],\n\tfilters: {\n\t\tcompany: employee.data?.company,\n\t},\n\torderBy: \"start_date desc\",\n\tauto: true,\n\ttransform(data) {\n\t\treturn data.map((period) => {\n\t\t\tperiodsByName.value[period.name] = period\n\t\t\treturn {\n\t\t\t\tlabel: getPeriodLabel(period),\n\t\t\t\tvalue: period.name,\n\t\t\t}\n\t\t})\n\t},\n\tonSuccess: (data) => {\n\t\tselectedPeriod.value = data[0]\n\t},\n})\n\nconst documents = createListResource({\n\tdoctype: \"Salary Slip\",\n\tfields: [\n\t\t\"name\",\n\t\t\"start_date\",\n\t\t\"end_date\",\n\t\t\"currency\",\n\t\t\"gross_pay\",\n\t\t\"net_pay\",\n\t\t\"year_to_date\",\n\t],\n\tfilters: {\n\t\temployee: employee.data?.name,\n\t\tdocstatus: 1,\n\t},\n\torderBy: \"end_date desc\",\n})\n\nconst lastSalarySlip = computed(() => documents.data?.[0])\n\nfunction getPeriodLabel(period) {\n\treturn `${dayjs(period?.start_date).format(\"MMM YYYY\")} - ${dayjs(\n\t\tperiod?.end_date\n\t).format(\"MMM YYYY\")}`\n}\n\nwatch(\n\t() => selectedPeriod.value,\n\t(value) => {\n\t\tlet period = periodsByName.value[value?.value]\n\t\tdocuments.filters.start_date = [\n\t\t\t\"between\",\n\t\t\t[period?.start_date, period?.end_date],\n\t\t]\n\t\tdocuments.reload()\n\t}\n)\n\nonMounted(() => {\n\tsocket.on(\"hrms:update_salary_slips\", (data) => {\n\t\tif (data.employee === employee.data.name) {\n\t\t\tdocuments.reload()\n\t\t}\n\t})\n})\n\nonBeforeUnmount(() => {\n\tsocket.off(\"hrms:update_salary_slips\")\n})\n</script>\n"],"names":["selectedPeriod","ref","periodsByName","employee","inject","dayjs","socket","payrollPeriods","createListResource","_a","data","period","getPeriodLabel","documents","_b","lastSalarySlip","computed","watch","value","onMounted","onBeforeUnmount"],"mappings":"g2BAkEA,IAAIA,EAAiBC,EAAI,EAAE,EACvBC,EAAgBD,EAAI,EAAE,EAE1B,MAAME,EAAWC,EAAO,WAAW,EAC7BC,EAAQD,EAAO,QAAQ,EACvBE,EAASF,EAAO,SAAS,EAEzBG,EAAiBC,EAAmB,CACzC,QAAS,iBACT,OAAQ,CAAC,OAAQ,aAAc,UAAU,EACzC,QAAS,CACR,SAASC,EAAAN,EAAS,OAAT,YAAAM,EAAe,OACxB,EACD,QAAS,kBACT,KAAM,GACN,UAAUC,EAAM,CACf,OAAOA,EAAK,IAAKC,IAChBT,EAAc,MAAMS,EAAO,IAAI,EAAIA,EAC5B,CACN,MAAOC,EAAeD,CAAM,EAC5B,MAAOA,EAAO,IACd,EACD,CACD,EACD,UAAYD,GAAS,CACpBV,EAAe,MAAQU,EAAK,CAAC,CAC7B,CACF,CAAC,EAEKG,EAAYL,EAAmB,CACpC,QAAS,cACT,OAAQ,CACP,OACA,aACA,WACA,WACA,YACA,UACA,cACA,EACD,QAAS,CACR,UAAUM,EAAAX,EAAS,OAAT,YAAAW,EAAe,KACzB,UAAW,CACX,EACD,QAAS,eACV,CAAC,EAEKC,EAAiBC,EAAS,IAAA,OAAM,OAAAP,EAAAI,EAAU,OAAV,YAAAJ,EAAiB,GAAE,EAEzD,SAASG,EAAeD,EAAQ,CAC/B,MAAO,GAAGN,EAAMM,GAAA,YAAAA,EAAQ,UAAU,EAAE,OAAO,UAAU,CAAC,MAAMN,EAC3DM,GAAA,YAAAA,EAAQ,QACV,EAAG,OAAO,UAAU,CAAC,EACrB,CAEA,OAAAM,EACC,IAAMjB,EAAe,MACpBkB,GAAU,CACV,IAAIP,EAAST,EAAc,MAAMgB,GAAA,YAAAA,EAAO,KAAK,EAC7CL,EAAU,QAAQ,WAAa,CAC9B,UACA,CAACF,GAAA,YAAAA,EAAQ,WAAYA,GAAA,YAAAA,EAAQ,QAAQ,CACrC,EACDE,EAAU,OAAQ,CAClB,CACF,EAEAM,EAAU,IAAM,CACfb,EAAO,GAAG,2BAA6BI,GAAS,CAC3CA,EAAK,WAAaP,EAAS,KAAK,MACnCU,EAAU,OAAQ,CAErB,CAAE,CACF,CAAC,EAEDO,EAAgB,IAAM,CACrBd,EAAO,IAAI,0BAA0B,CACtC,CAAC"}