{"version":3,"file":"formatters-Ch330Bw1.js","sources":["../../../../frontend/src/utils/formatters.js"],"sourcesContent":["import { createDocumentResource } from \"frappe-ui\"\n\nconst settings = createDocumentResource({\n\tdoctype: \"System Settings\",\n\tname: \"System Settings\",\n\tauto: false,\n})\n\nexport const formatCurrency = (value, currency) => {\n\tif (!currency) return value\n\n\t// hack: if value contains a space, it is already formatted\n\tif (value?.toString().trim().includes(\" \")) return value\n\n\tconst locale =\n\t\tsettings.doc?.country == \"India\" ? \"en-IN\" : settings.doc?.language\n\n\tconst formatter = Intl.NumberFormat(locale, {\n\t\tstyle: \"currency\",\n\t\tcurrency: currency,\n\t\ttrailingZeroDisplay: \"stripIfInteger\",\n\t})\n\treturn (\n\t\tformatter\n\t\t\t.format(value)\n\t\t\t// add space between the digits and symbol\n\t\t\t.replace(/^(\\D+)/, \"$1 \")\n\t\t\t// remove extra spaces if any (added by some browsers)\n\t\t\t.replace(/\\s+/, \" \")\n\t)\n}\n"],"names":["settings","createDocumentResource","formatCurrency","value","currency","locale","_a","_b"],"mappings":"6CAEA,MAAMA,EAAWC,EAAuB,CACvC,QAAS,kBACT,KAAM,kBACN,KAAM,EACP,CAAC,EAEYC,EAAiB,CAACC,EAAOC,IAAa,SAIlD,GAHI,CAACA,GAGDD,GAAA,MAAAA,EAAO,WAAW,OAAO,SAAS,KAAM,OAAOA,EAEnD,MAAME,IACLC,EAAAN,EAAS,MAAT,YAAAM,EAAc,UAAW,QAAU,SAAUC,EAAAP,EAAS,MAAT,YAAAO,EAAc,SAO5D,OALkB,KAAK,aAAaF,EAAQ,CAC3C,MAAO,WACP,SAAUD,EACV,oBAAqB,gBACvB,CAAE,EAGE,OAAOD,CAAK,EAEZ,QAAQ,SAAU,KAAK,EAEvB,QAAQ,MAAO,GAAG,CAEtB"}