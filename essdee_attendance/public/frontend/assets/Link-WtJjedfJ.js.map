{"version":3,"file":"Link-WtJjedfJ.js","sources":["../../../../frontend/src/components/Link.vue"],"sourcesContent":["<template>\n\t<Autocomplete\n\t\tref=\"autocompleteRef\"\n\t\tsize=\"sm\"\n\t\tv-model=\"value\"\n\t\t:placeholder=\"`Select ${doctype}`\"\n\t\t:options=\"options.data\"\n\t\t:class=\"disabled ? 'pointer-events-none' : ''\"\n\t\t:disabled=\"disabled\"\n\t/>\n</template>\n\n<script setup>\nimport { createResource, Autocomplete, debounce } from \"frappe-ui\"\nimport { ref, computed, watch, onMounted } from \"vue\"\n\nconst props = defineProps({\n\tdoctype: {\n\t\ttype: String,\n\t\trequired: true,\n\t},\n\tmodelValue: {\n\t\ttype: String,\n\t\trequired: false,\n\t\tdefault: \"\",\n\t},\n\tfilters: {\n\t\ttype: Object,\n\t\tdefault: {},\n\t},\n\tdisabled: {\n\t\ttype: Boolean,\n\t\tdefault: false,\n\t},\n})\n\nconst emit = defineEmits([\"update:modelValue\"])\n\nconst autocompleteRef = ref(null)\nconst searchText = ref(\"\")\n\nconst value = computed({\n\tget: () => props.modelValue,\n\tset: (val) => {\n\t\temit(\"update:modelValue\", val || \"\")\n\t},\n})\n\nconst options = createResource({\n\turl: \"frappe.desk.search.search_link\",\n\tparams: {\n\t\tdoctype: props.doctype,\n\t\ttxt: searchText.value,\n\t\tfilters: props.filters,\n\t},\n\tmethod: \"POST\",\n\ttransform: (data) => {\n\t\treturn data.map((doc) => {\n\t\t\tconst title = doc?.description?.split(\",\")?.[0]\n\t\t\treturn {\n\t\t\t\tlabel: title ? `${title} : ${doc.value}` : doc.value,\n\t\t\t\tvalue: doc.value,\n\t\t\t}\n\t\t})\n\t},\n})\nconst reloadOptions = debounce((searchTextVal) => {\n\toptions.update({\n\t\tparams: {\n\t\t\ttxt: searchTextVal,\n\t\t\tdoctype: props.doctype,\n\t\t},\n\t})\n\toptions.reload()\n}, 300)\n\nwatch(\n\t() => props.doctype,\n\t() => {\n\t\tif (!props.doctype || props.doctype === options.doctype) return\n\t\treloadOptions(\"\")\n\t},\n\t{ immediate: true }\n)\n\nwatch(\n\t() => autocompleteRef.value?.query,\n\t(val) => {\n\t\tval = val || \"\"\n\t\tif (searchText.value === val) return\n\t\tsearchText.value = val\n\t\treloadOptions(val)\n\t},\n\t{ immediate: true }\n)\n</script>\n\n<!-- <Link\n\t\t\tv-else-if=\"props.fieldtype === 'Link'\"\n\t\t\t:doctype=\"props.options\"\n\t\t\t:modelValue=\"modelValue\"\n\t\t\t:filters=\"props.linkFilters\"\n\t\t\t:disabled=\"isReadOnly\"\n\t\t\t@update:modelValue=\"(v) => emit('update:modelValue', v)\"\n\t\t/> -->"],"names":["props","__props","emit","__emit","autocompleteRef","ref","searchText","value","computed","val","options","createResource","data","doc","title","_b","_a","reloadOptions","debounce","searchTextVal","watch"],"mappings":"gVAgBA,MAAMA,EAAQC,EAoBRC,EAAOC,EAEPC,EAAkBC,EAAI,IAAI,EAC1BC,EAAaD,EAAI,EAAE,EAEnBE,EAAQC,EAAS,CACtB,IAAK,IAAMR,EAAM,WACjB,IAAMS,GAAQ,CACbP,EAAK,oBAAqBO,GAAO,EAAE,CACnC,CACF,CAAC,EAEKC,EAAUC,EAAe,CAC9B,IAAK,iCACL,OAAQ,CACP,QAASX,EAAM,QACf,IAAKM,EAAW,MAChB,QAASN,EAAM,OACf,EACD,OAAQ,OACR,UAAYY,GACJA,EAAK,IAAKC,GAAQ,SACxB,MAAMC,GAAQC,GAAAC,EAAAH,GAAA,YAAAA,EAAK,cAAL,YAAAG,EAAkB,MAAM,OAAxB,YAAAD,EAA+B,GAC7C,MAAO,CACN,MAAOD,EAAQ,GAAGA,CAAK,MAAMD,EAAI,KAAK,GAAKA,EAAI,MAC/C,MAAOA,EAAI,KACX,CACJ,CAAG,CAEH,CAAC,EACKI,EAAgBC,EAAUC,GAAkB,CACjDT,EAAQ,OAAO,CACd,OAAQ,CACP,IAAKS,EACL,QAASnB,EAAM,OACf,CACH,CAAE,EACDU,EAAQ,OAAQ,CACjB,EAAG,GAAG,EAEN,OAAAU,EACC,IAAMpB,EAAM,QACZ,IAAM,CACD,CAACA,EAAM,SAAWA,EAAM,UAAYU,EAAQ,SAChDO,EAAc,EAAE,CAChB,EACD,CAAE,UAAW,EAAM,CACpB,EAEAG,EACC,IAAM,OAAA,OAAAJ,EAAAZ,EAAgB,QAAhB,YAAAY,EAAuB,OAC5BP,GAAQ,CACRA,EAAMA,GAAO,GACTH,EAAW,QAAUG,IACzBH,EAAW,MAAQG,EACnBQ,EAAcR,CAAG,EACjB,EACD,CAAE,UAAW,EAAM,CACpB"}