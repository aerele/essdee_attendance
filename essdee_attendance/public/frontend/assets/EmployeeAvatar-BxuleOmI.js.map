{"version":3,"file":"EmployeeAvatar-BxuleOmI.js","sources":["../../../../frontend/src/data/employees.js","../../../../frontend/src/components/EmployeeAvatar.vue"],"sourcesContent":["import { createResource } from \"frappe-ui\"\nimport { reactive } from \"vue\"\nimport { employeeResource } from \"./employee\"\n\nlet employeesByID = reactive({})\nlet employeesByUserID = reactive({})\n\nexport const employees = createResource({\n\turl: \"essdee_attendance.api.get_all_employees\",\n\tauto: true,\n\ttransform(data) {\n\t\treturn data.map((employee) => {\n\t\t\temployee.isActive = employee.status === \"Active\"\n\t\t\temployeesByID[employee.name] = employee\n\t\t\temployeesByUserID[employee.user_id] = employee\n\n\t\t\treturn employee\n\t\t})\n\t},\n\tonError(error) {\n\t\tif (error && error.exc_type === \"AuthenticationError\") {\n\t\t\trouter.push({ name: \"Login\" })\n\t\t}\n\t},\n})\n\nexport function getEmployeeInfo(employeeID) {\n\tif (!employeeID) employeeID = employeeResource.data.name\n\n\treturn employeesByID[employeeID]\n}\n\nexport function getEmployeeInfoByUserID(userID) {\n\treturn employeesByUserID[userID]\n}\n","<template>\n\t<div v-if=\"showLabel\" class=\"flex flex-row items-center gap-2\">\n\t\t<Avatar\n\t\t\tv-if=\"employee\"\n\t\t\t:label=\"employee?.employee_name\"\n\t\t\t:image=\"employee?.image\"\n\t\t\t:size=\"props.size\"\n\t\t/>\n\t\t<div class=\"text-base text-gray-800 grow\">\n\t\t\t{{ employee?.employee_name }}\n\t\t</div>\n\t</div>\n\n\t<Avatar\n\t\tv-else\n\t\t:label=\"employee?.employee_name\"\n\t\t:image=\"employee?.image\"\n\t\t:size=\"props.size\"\n\t/>\n</template>\n\n<script setup>\nimport { computed } from \"vue\"\nimport { Avatar } from \"frappe-ui\"\nimport { getEmployeeInfo, getEmployeeInfoByUserID } from \"@/data/employees\"\n\nconst props = defineProps({\n\temployeeID: {\n\t\ttype: String,\n\t\trequired: false,\n\t},\n\tuserID: {\n\t\ttype: String,\n\t\trequired: false,\n\t},\n\tsize: {\n\t\ttype: String,\n\t\tdefault: \"sm\",\n\t},\n\tshowLabel: {\n\t\ttype: Boolean,\n\t\tdefault: false,\n\t},\n})\n\nconst employee = computed(() => {\n\tif (props.employeeID) {\n\t\treturn getEmployeeInfo(props.employeeID)\n\t} else if (props.userID) {\n\t\treturn getEmployeeInfoByUserID(props.userID)\n\t}\n})\n</script>\n"],"names":["employeesByID","reactive","employeesByUserID","createResource","data","employee","error","getEmployeeInfo","employeeID","employeeResource","getEmployeeInfoByUserID","userID","props","__props","computed"],"mappings":"4JAIA,IAAIA,EAAgBC,EAAS,EAAE,EAC3BC,EAAoBD,EAAS,EAAE,EAEVE,EAAe,CACvC,IAAK,0CACL,KAAM,GACN,UAAUC,EAAM,CACf,OAAOA,EAAK,IAAKC,IAChBA,EAAS,SAAWA,EAAS,SAAW,SACxCL,EAAcK,EAAS,IAAI,EAAIA,EAC/BH,EAAkBG,EAAS,OAAO,EAAIA,EAE/BA,EACP,CACD,EACD,QAAQC,EAAO,CACVA,GAASA,EAAM,WAAa,uBAC/B,OAAO,KAAK,CAAE,KAAM,OAAO,CAAE,CAE9B,CACF,CAAC,EAEM,SAASC,EAAgBC,EAAY,CAC3C,OAAKA,IAAYA,EAAaC,EAAiB,KAAK,MAE7CT,EAAcQ,CAAU,CAChC,CAEO,SAASE,EAAwBC,EAAQ,CAC/C,OAAOT,EAAkBS,CAAM,CAChC,yRCRA,MAAMC,EAAQC,EAmBRR,EAAWS,EAAS,IAAM,CAC/B,GAAIF,EAAM,WACT,OAAOL,EAAgBK,EAAM,UAAU,EACjC,GAAIA,EAAM,OAChB,OAAOF,EAAwBE,EAAM,MAAM,CAE7C,CAAC"}