{"version":3,"file":"LeaveRequestItem-De6y222G.js","sources":["../../../../frontend/src/components/LeaveRequestItem.vue"],"sourcesContent":["<template>\n\t<div class=\"flex flex-col w-full justify-center gap-2.5\">\n\t\t<div class=\"flex flex-row items-center justify-between\">\n\t\t\t<div class=\"flex flex-row items-start gap-3 grow\">\n\t\t\t\t<LeaveIcon class=\"h-5 w-5 text-gray-500\" />\n\t\t\t\t<div class=\"flex flex-col items-start gap-1.5\">\n\t\t\t\t\t<div class=\"text-base font-normal text-gray-800\">\n\t\t\t\t\t\t{{ props.doc.leave_type }}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"text-xs font-normal text-gray-500\">\n\t\t\t\t\t\t<span>{{ props.doc.leave_dates || getLeaveDates(props.doc) }}</span>\n\t\t\t\t\t\t<span class=\"whitespace-pre\"> &middot; </span>\n\t\t\t\t\t\t<span class=\"whitespace-nowrap\">{{\n\t\t\t\t\t\t\t`${props.doc.total_leave_days}d`\n\t\t\t\t\t\t}}</span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class=\"flex flex-row justify-end items-center gap-2\">\n\t\t\t\t<Badge\n\t\t\t\t\tvariant=\"outline\"\n\t\t\t\t\t:theme=\"colorMap[status]\"\n\t\t\t\t\t:label=\"status\"\n\t\t\t\t\tsize=\"md\"\n\t\t\t\t/>\n\t\t\t\t<FeatherIcon name=\"chevron-right\" class=\"h-5 w-5 text-gray-500\" />\n\t\t\t</div>\n\t\t</div>\n\t\t<div\n\t\t\tv-if=\"props.isTeamRequest\"\n\t\t\tclass=\"flex flex-row items-center gap-2 pl-8\"\n\t\t>\n\t\t\t<EmployeeAvatar :employeeID=\"props.doc.employee\" />\n\t\t\t<div class=\"text-sm text-gray-600 grow\">\n\t\t\t\t{{ props.doc.employee_name }}\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</template>\n\n<script setup>\nimport { computed } from \"vue\"\nimport { FeatherIcon, Badge } from \"frappe-ui\"\n\nimport EmployeeAvatar from \"@/components/EmployeeAvatar.vue\"\nimport LeaveIcon from \"@/components/icons/LeaveIcon.vue\"\nimport { getLeaveDates } from \"@/data/leaves\"\n\nconst props = defineProps({\n\tdoc: {\n\t\ttype: Object,\n\t},\n\tisTeamRequest: {\n\t\ttype: Boolean,\n\t\tdefault: false,\n\t},\n\tworkflowStateField: {\n\t\ttype: String,\n\t\trequired: false,\n\t},\n})\n\nconst status = computed(() => {\n\treturn props.workflowStateField\n\t\t? props.doc[props.workflowStateField]\n\t\t: props.doc.status\n})\n\nconst colorMap = {\n\tApproved: \"green\",\n\tRejected: \"red\",\n\tOpen: \"orange\",\n}\n</script>\n"],"names":["props","__props","status","computed","colorMap"],"mappings":"q5BAgDA,MAAMA,EAAQC,EAcRC,EAASC,EAAS,IAChBH,EAAM,mBACVA,EAAM,IAAIA,EAAM,kBAAkB,EAClCA,EAAM,IAAI,MACb,EAEKI,EAAW,CAChB,SAAU,QACV,SAAU,MACV,KAAM,QACP"}